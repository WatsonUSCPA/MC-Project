{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\what1\\\\OneDrive\\\\Desktop\\\\Project\\\\MCProject_Beta\\\\mc-square-react\\\\src\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // ローカルストレージからカート情報を読み込み\n  useEffect(() => {\n    const savedCart = localStorage.getItem('mcSquareCart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCart(parsedCart);\n        console.log('🛒 グローバルカート情報を復元しました:', parsedCart.length, '個の商品');\n      } catch (error) {\n        console.error('カート情報の復元に失敗しました:', error);\n        setCart([]);\n      }\n    }\n    setIsInitialized(true);\n  }, []);\n\n  // カート情報をローカルストレージに保存（初期化後のみ）\n  useEffect(() => {\n    if (isInitialized) {\n      localStorage.setItem('mcSquareCart', JSON.stringify(cart));\n      console.log('💾 グローバルカート情報を保存しました:', cart.length, '個の商品');\n    }\n  }, [cart, isInitialized]);\n\n  // カートに商品を追加\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existing = prevCart.find(item => item.managementNumber === product.managementNumber);\n      if (existing) {\n        return prevCart.map(item => item.managementNumber === product.managementNumber ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevCart, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // カートから商品を削除\n  const removeFromCart = managementNumber => {\n    setCart(prevCart => prevCart.filter(item => item.managementNumber !== managementNumber));\n  };\n\n  // 数量を更新\n  const updateQuantity = (managementNumber, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(managementNumber);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.managementNumber === managementNumber ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // カートを空にする\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // カート内の商品数\n  const cartCount = cart.reduce((sum, item) => sum + item.quantity, 0);\n\n  // 合計金額\n  const totalPrice = cart.reduce((sum, item) => {\n    const priceNum = Number(String(item.price).replace(/[^\\d.]/g, ''));\n    return sum + priceNum * item.quantity;\n  }, 0);\n  const value = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    cartCount,\n    totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"Nq60ldTJLpQY3v/GwD7Mr2ZreuE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","undefined","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","isInitialized","setIsInitialized","savedCart","localStorage","getItem","parsedCart","JSON","parse","console","log","length","error","setItem","stringify","addToCart","product","prevCart","existing","find","item","managementNumber","map","quantity","removeFromCart","filter","updateQuantity","clearCart","cartCount","reduce","sum","totalPrice","priceNum","Number","String","price","replace","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/what1/OneDrive/Desktop/Project/MCProject_Beta/mc-square-react/src/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\n\r\ninterface Product {\r\n  managementNumber: string;\r\n  name: string;\r\n  price: string;\r\n  imageUrl?: string;\r\n  status?: string;\r\n}\r\n\r\ninterface CartItem extends Product {\r\n  quantity: number;\r\n}\r\n\r\ninterface CartContextType {\r\n  cart: CartItem[];\r\n  addToCart: (product: Product) => void;\r\n  removeFromCart: (managementNumber: string) => void;\r\n  updateQuantity: (managementNumber: string, quantity: number) => void;\r\n  clearCart: () => void;\r\n  cartCount: number;\r\n  totalPrice: number;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  // ローカルストレージからカート情報を読み込み\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('mcSquareCart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        setCart(parsedCart);\r\n        console.log('🛒 グローバルカート情報を復元しました:', parsedCart.length, '個の商品');\r\n      } catch (error) {\r\n        console.error('カート情報の復元に失敗しました:', error);\r\n        setCart([]);\r\n      }\r\n    }\r\n    setIsInitialized(true);\r\n  }, []);\r\n\r\n  // カート情報をローカルストレージに保存（初期化後のみ）\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      localStorage.setItem('mcSquareCart', JSON.stringify(cart));\r\n      console.log('💾 グローバルカート情報を保存しました:', cart.length, '個の商品');\r\n    }\r\n  }, [cart, isInitialized]);\r\n\r\n  // カートに商品を追加\r\n  const addToCart = (product: Product) => {\r\n    setCart(prevCart => {\r\n      const existing = prevCart.find(item => item.managementNumber === product.managementNumber);\r\n      if (existing) {\r\n        return prevCart.map(item =>\r\n          item.managementNumber === product.managementNumber\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // カートから商品を削除\r\n  const removeFromCart = (managementNumber: string) => {\r\n    setCart(prevCart => prevCart.filter(item => item.managementNumber !== managementNumber));\r\n  };\r\n\r\n  // 数量を更新\r\n  const updateQuantity = (managementNumber: string, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(managementNumber);\r\n      return;\r\n    }\r\n    setCart(prevCart => prevCart.map(item =>\r\n      item.managementNumber === managementNumber\r\n        ? { ...item, quantity }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // カートを空にする\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  // カート内の商品数\r\n  const cartCount = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n  // 合計金額\r\n  const totalPrice = cart.reduce((sum, item) => {\r\n    const priceNum = Number(String(item.price).replace(/[^\\d.]/g, ''));\r\n    return sum + priceNum * item.quantity;\r\n  }, 0);\r\n\r\n  const value: CartContextType = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    cartCount,\r\n    totalPrice,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}